{"version":3,"sources":["settings.js","components/UpdateHandler.js","components/Header.js","components/views/Home.js","components/views/About.js","farmaSDK.js","components/views/News.js","App.js","index.js","registerServiceWorker.js"],"names":["theme","createMuiTheme","palette","primary","secondary","UpdateHandler","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showInstalledMessage","showUpdateMessage","showUpdateOnRestartMessage","_this2","appServiceWorker","onInstalled","setState","onUpdateFound","_this3","react_default","a","createElement","react","children","index_es","open","autoHideDuration","onClose","message","action","key","color","size","onClick","window","location","reload","Component","Header","goBack","history","back","_this$props","classes","title","_this$props$backButto","backButton","rightAction","appBarProps","objectWithoutProperties","assign","position","className","menuButtonWrapper","aria-label","icons_index_es","variant","flex","withStyles","root","marginLeft","marginRight","Home","components_Header","gutterBottom","component","Link","to","About","href","FarmaSdk","_ref$apiURL","arguments","length","undefined","apiURL","rootRoute","fetch","route","then","res","json","_len","Array","_key","i","construct","News","sdk","instance","loading","news","catch","error","console","fetchNews","Fragment","map","article","id","style","maxWidth","margin","_embedded","height","rendered","image","source_url","dangerouslySetInnerHTML","__html","content","App","HashRouter","styles","components_UpdateHandler","Switch","Route","exact","path","appSW","AppServiceWorker","isLocalhost","Boolean","hostname","match","installPromise","Promise","resolve","installPromiseResolver","updatePromise","updatePromiseResolver","log","navigator","URL","process","origin","addEventListener","swUrl","concat","checkValidServiceWorker","serviceWorker","ready","registerValidSW","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","_this4","response","status","headers","get","indexOf","unregister","callback","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.69c15343.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\nimport {\n    red as primary, // Primary color\n    blue as secondary, // Primary color\n} from '@material-ui/core/colors'\n\n/**\n * Material UI theme feature\n * @see https://material-ui.com/customization/themes/\n * @see https://material-ui.com/style/color/\n */\nexport const theme = createMuiTheme({\n    palette: {\n        primary,\n        secondary,\n    },\n})","import React, { Component, Fragment } from 'react';\nimport { Snackbar, Button } from '@material-ui/core'\n\nclass UpdateHandler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showInstalledMessage: false,\n            showUpdateMessage: false,\n            showUpdateOnRestartMessage: false,\n        }\n    }\n\n    componentDidMount() {\n        const { appServiceWorker } = this.props\n        if (appServiceWorker) {\n            appServiceWorker.onInstalled(() => this.setState({ showInstalledMessage: true }))\n            appServiceWorker.onUpdateFound(() => this.setState({ showUpdateMessage: true }))\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.children}\n                <Snackbar\n                    open={this.state.showInstalledMessage}\n                    autoHideDuration={6000}\n                    onClose={() => this.setState({ showInstalledMessage: false })}\n                    message=\"The APP is ready to  work offline.\"\n                />\n                <Snackbar\n                    open={this.state.showUpdateMessage}\n                    onClose={() => this.setState({ showUpdateMessage: false, showUpdateOnRestartMessage: true })}\n                    message=\"A new version is available.\"\n                    action={[\n                        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => window.location.reload()}>\n                            UPDATE\n                        </Button>\n                    ]}\n                />\n                <Snackbar\n                    open={this.state.showUpdateOnRestartMessage}\n                    autoHideDuration={6000}\n                    onClose={() => this.setState({ showUpdateOnRestartMessage: false })}\n                    message=\"The APP will be updated on the next restart.\"\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default UpdateHandler;","import React, { Component } from 'react';\nimport { withStyles, IconButton, Typography, Toolbar, AppBar } from '@material-ui/core'\nimport {\n    ArrowBack as ArrowBackIcon,\n} from '@material-ui/icons'\n\n\nconst styles = {\n    root: {\n        // paddingTop: 64\n    },\n    flex: {\n        flex: 1,\n    },\n    menuButtonWrapper: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nclass Header extends Component {\n\n    goBack = () => window.history.back()\n\n    render() {\n        const { children, classes, title, backButton = false, rightAction, appBarProps, ...props } = this.props\n\n        return (\n            <AppBar position=\"sticky\" {...appBarProps} {...props}>\n                <Toolbar>\n                    <div className={classes.menuButtonWrapper}>\n                        {backButton &&\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.goBack}>\n                                <ArrowBackIcon />\n                            </IconButton>}\n                    </div>\n\n                    {title &&\n                        <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\n                            {title}\n                        </Typography>\n                    }\n\n                    {rightAction && <div>{rightAction}</div>}\n                </Toolbar>\n                {children}\n            </AppBar>\n        )\n    }\n\n}\n\nexport default withStyles(styles)(Header);\n","import React, { Component, Fragment } from 'react';\nimport Header from '../Header';\nimport { Typography, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Header title=\"Farmácia solidária\" />\n                <main>\n                    <Typography gutterBottom>\n                        Demonstração\n                    </Typography>\n                    <Button component={Link} to=\"news\" variant=\"contained\" color=\"secondary\" >Notícias</Button>\n                    <Button component={Link} to=\"about\" variant=\"contained\" color=\"secondary\" >Sobre</Button>\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport Header from '../Header';\nimport { Typography } from '@material-ui/core';\n\nclass About extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Header title=\"Sobre\" backButton />\n                <main>\n                    <Typography gutterBottom>\n                        APP em desenvolvimento.\n                    <a href=\"http://github.com/minas-dev-test/farmacia-frontend-react\">\n                    Visitar repositório\n                    </a>\n                    </Typography>\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nexport default About;","\nexport default class FarmaSdk {\n    constructor({ apiURL = 'http://localhost:3000' } = {}) {\n        this.apiURL = apiURL\n        this.rootRoute = '/api/v1'\n    }\n\n    news(){\n        return this.fetch('/news?_embed')\n    }\n\n    fetch(route) {\n        return fetch(this.apiURL + this.rootRoute + route).then(res => res.json())\n    }\n\n    static i = null\n\n    /**\n     * Get instance\n     *\n     * @static\n     * @param {Object} props\n     * @returns {FarmaSdk} \n     * @memberof FarmaSdk\n     */\n    static instance(...props) {\n        return this.i = this.i || new this(...props)\n    }\n}","import React, { Component } from 'react';\nimport Header from '../Header';\nimport { Typography, CircularProgress, Card, CardContent, CardMedia, CardActionArea } from '@material-ui/core';\nimport FarmaSdk from '../../farmaSDK'\n\nclass News extends Component {\n    constructor(props) {\n        super(props);\n        this.sdk = FarmaSdk.instance()\n        this.state = {\n            loading: true\n        }\n    }\n\n    fetchNews() {\n        this.setState({ loading: true })\n        this.sdk.news()\n            .then(news => this.setState({ loading: false, news }))\n            .catch(error => console.error(error) || this.setState({ error }))\n            .then(() => this.setState({ loading: false }))\n    }\n\n    componentDidMount() {\n        this.fetchNews()\n    }\n\n    render() {\n        return (\n            <>\n                <Header title=\"Notícias\" backButton />\n                <main>\n                    {this.state.loading ? <CircularProgress /> :\n                        this.state.news.map(article =>\n                            <Card component=\"article\" key={article.id}\n                                style={{ maxWidth: 480, margin: '10px auto' }}>\n                                <CardActionArea>\n                                    {article._embedded['wp:featuredmedia'] &&\n                                        <CardMedia\n                                            style={{ height: 140 }}\n                                            title={article._embedded['wp:featuredmedia'][0].title.rendered}\n                                            image={article._embedded['wp:featuredmedia'][0].source_url} />\n\n                                    }\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {article.title.rendered}\n                                        </Typography>\n\n                                        <Typography component=\"div\"\n                                            dangerouslySetInnerHTML={{ __html: article.content.rendered }} />\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        )}\n                </main>\n            </>\n        );\n    }\n}\n\nexport default News;","import React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport 'typeface-roboto'\n\nimport { theme } from './settings'\nimport UpdateHandler from './components/UpdateHandler'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './components/views/Home';\nimport About from './components/views/About';\nimport News from './components/views/News';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <MuiThemeProvider theme={theme}>\n                    <UpdateHandler appServiceWorker={this.props.appServiceWorker}>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/about\" component={About} />\n                            <Route exact path=\"/news\" component={News} />\n                        </Switch>\n                    </UpdateHandler>\n                </MuiThemeProvider>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport AppServiceWorker from './registerServiceWorker';\n\nconst appSW = new AppServiceWorker();\nReactDOM.render(<App appServiceWorker={appSW} />, document.getElementById('root'));\nappSW.register();","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n/**\n * App Service Worker Class\n * \n * @export\n * @class AppServiceWorker\n */\nexport default class AppServiceWorker {\n    /**\n     * Creates an instance of AppServiceWorker.\n     * \n     * @memberof AppServiceWorker\n     */\n    constructor() {\n\n        this.isLocalhost = Boolean(\n            window.location.hostname === \"localhost\" ||\n            // [::1] is the IPv6 localhost address.\n            window.location.hostname === \"[::1]\" ||\n            // 127.0.0.1/8 is considered localhost for IPv4.\n            window.location.hostname.match(\n                /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n            )\n        );\n\n        this.installPromise = new Promise(resolve => this.installPromiseResolver = resolve)\n        this.updatePromise = new Promise(resolve => this.updatePromiseResolver = resolve)\n\n        this.onUpdateFound(() => console.log(\"New content is available; please refresh.\"))\n        this.onInstalled(() => console.log(\"Content is cached for offline use.\"))\n\n    }\n    /**\n     * Register the service worker\n     * \n     * @returns \n     * @memberof AppServiceWorker\n     */\n    register() {\n        if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n            // The URL constructor is available in all browsers that support SW.\n            const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n            if (publicUrl.origin !== window.location.origin) {\n                // Our service worker won't work if PUBLIC_URL is on a different origin\n                // from what our page is served on. This might happen if a CDN is used to\n                // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n                return;\n            }\n\n            window.addEventListener(\"load\", () => {\n                const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n                if (this.isLocalhost) {\n                    // This is running on localhost. Lets check if a service worker still exists or not.\n                    this.checkValidServiceWorker(swUrl);\n\n                    // Add some additional logging to localhost, pointing developers to the\n                    // service worker/PWA documentation.\n                    navigator.serviceWorker.ready.then(() => {\n                        console.log(\n                            \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                        );\n                    });\n                } else {\n                    // Is not local host. Just register service worker\n                    this.registerValidSW(swUrl);\n                }\n            });\n        }\n    }\n\n    registerValidSW(swUrl) {\n\n        navigator.serviceWorker\n            .register(swUrl)\n            .then(registration => {\n\n                registration.onupdatefound = () => {\n                    const installingWorker = registration.installing;\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a \"New content is\n                                // available; please refresh.\" message in your web app.\n                                this.updatePromiseResolver()\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // \"Content is cached for offline use.\" message.\n                                this.installPromiseResolver()\n                            }\n                        }\n                    };\n                };\n            })\n            .catch(error => {\n                console.error(\"Error during service worker registration:\", error);\n            });\n    }\n\n    checkValidServiceWorker(swUrl) {\n        // Check if the service worker can be found. If it can't reload the page.\n        fetch(swUrl)\n            .then(response => {\n                // Ensure service worker exists, and that we really are getting a JS file.\n                if (\n                    response.status === 404 ||\n                    response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n                ) {\n                    // No service worker found. Probably a different app. Reload the page.\n                    navigator.serviceWorker.ready.then(registration => {\n                        registration.unregister().then(() => {\n                            window.location.reload();\n                        });\n                    });\n                } else {\n                    // Service worker found. Proceed as normal.\n                    this.registerValidSW(swUrl);\n                }\n            })\n            .catch(() => {\n                console.log(\n                    \"No internet connection found. App is running in offline mode.\"\n                );\n            });\n    }\n\n    unregister() {\n        if (\"serviceWorker\" in navigator) {\n            navigator.serviceWorker.ready.then(registration => {\n                registration.unregister();\n            });\n        }\n    }\n\n    onInstalled(callback) {\n        this.installPromise.then(callback).catch(console.error)\n\n    }\n\n    onUpdateFound(callback) {\n        this.updatePromise.then(callback).catch(console.error)\n    }\n}"],"sourceRoot":""}